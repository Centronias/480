S
	( SPAREN ) SP
	EXPR SP
SPAREN
	S
	~
SP
	S SP
	~
EXPR
	RESR
	( STMTS )
RESR
	( OPER )
	strings
	ints
	floats
	bools
	identifier
OPER
	:= identifier RESR
	- RESR OPER_MINUS
	+ RESR RESR
	* RESR RESR
	/ RESR RESR
	% RESR RESR
	^ RESR RESR
	= RESR RESR
	> RESR RESR
	>= RESR RESR
	< RESR RESR
	<= RESR RESR
	!= RESR RESR
	or RESR RESR
	and RESR RESR
	not RESR
	sin RESR
	cos RESR
	tan RESR
OPER_MINUS
	RESR
	~
STMTS
	if EXPR EXPR ELSE
	while EXPR EXPRLIST
	let ( VARLIST )
	stdout RESR
ELSE
	EXPR
	~
EXPRLIST
	EXPR EXPRLIST_CAP
EXPRLIST_CAP
	EXPRLIST
	~
VARLIST
	( identifier type ) VARLIST_CAP
VARLIST_CAP
	VARLIST
	~