// ****************************************************************************
// ****************************************************************************
// vector.h
// ****************************************************************************
// 
// ****************************************************************************
// ****************************************************************************



// ****************************************************************************
// Defines
// ****************************************************************************
#ifndef	H_VECTOR
#define H_VECTOR



// ****************************************************************************
// Vector<T> Class
// ****************************************************************************
class Vector<T> {
  public:
						Vector<T>();
						~Vector<T>();

	void				append(T&	element);
	T&					operator[](const UINT	index);
	const T&			operator[](const UINT	index) const;
	UINT				getNumEntries()	{return m_numEntries;}

  private:
	UINT				m_numEntries;
	UINT				m_size;
	T*					m_data;
};



#endif