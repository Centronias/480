S
	( S_PAR ) S_REC
	string S_REC
	int S_REC
	float S_REC
	bool S_REC
	id S_REC
S_PAR
	( S_PAR ) S_REC
	string S_REC
	int S_REC
	float S_REC
	bool S_REC
	id S_REC
	:= id RESR
	+ RESR RESR
	- RESR RESR_MIN
	* RESR RESR
	/ RESR RESR
	% RESR RESR
	^ RESR RESR
	= RESR RESR
	> RESR RESR
	>= RESR RESR
	< RESR RESR
	<= RESR RESR
	!= RESR RESR
	or RESR RESR
	and RESR RESR
	not RESR
	sin RESR
	cos RESR
	tan RESR
	if EXPR EXPR ELSE
	while EXPR EXPR EXPRLIST
	let ( ( id type ) VARLIST )
	stdout RESR
	~
S_REC
	( S_PAR ) S_REC
	string S_REC
	int S_REC
	float S_REC
	bool S_REC
	id S_REC
	~
EXPR
	( EXPR_PAR )
	string
	int
	float
	bool
	id
EXPR_PAR
	:= id RESR
	+ RESR RESR
	- RESR RESR_MIN
	* RESR RESR
	/ RESR RESR
	% RESR RESR
	^ RESR RESR
	= RESR RESR
	> RESR RESR
	>= RESR RESR
	< RESR RESR
	<= RESR RESR
	!= RESR RESR
	or RESR RESR
	and RESR RESR
	not RESR
	sin RESR
	cos RESR
	tan RESR
	if EXPR EXPR ELSE
	while EXPR EXPR EXPRLIST
	let ( ( id type ) VARLIST )
	stdout RESR
RESR
	( OPER )
	string
	int
	float
	bool
	id
OPER
	:= id RESR
	+ RESR RESR
	- RESR RESR_MIN
	* RESR RESR
	/ RESR RESR
	% RESR RESR
	^ RESR RESR
	= RESR RESR
	> RESR RESR
	>= RESR RESR
	< RESR RESR
	<= RESR RESR
	!= RESR RESR
	or RESR RESR
	and RESR RESR
	not RESR
	sin RESR
	cos RESR
	tan RESR
RESR_MIN
	( OPER )
	string
	int
	float
	bool
	id
	~
EXPRLIST
	( EXPR_PAR ) EXPRLIST
	string EXPRLIST
	int EXPRLIST
	float EXPRLIST
	bool EXPRLIST
	id EXPRLIST
	~
VARLIST
	( id type ) VARLIST
	~
ELSE
	( EXPR_PAR )
	string
	int
	float
	bool
	id
	~