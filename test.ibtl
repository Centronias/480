( ( ) ( % ( := var ( := var ( cos ( not ( not ( sin ( := var ( / ( sin float ) ( sin var ) ) ) ) ) ) ) ) ) "I am a robot" ) ( ( ) ) ) ( if ( if ( stdout float ) ( >= var var ) ) ( if ( >= ( := var ( - ( := var var ) ) ) ( tan "I am a robot" ) ) ( let ( ( var int ) ) ) ( let ( ( var int ) ( var int ) ) ) ) ) 
( ) 
( ( ( ) ) ) 
( ( stdout var ) ) 
( ( ) ) ( * ( sin ( := var ( - "I am a robot" ( - ( := var ( - 24 var ) ) ) ) ) ) ( and "I am a robot" ( = ( := var ( := var var ) ) float ) ) ) ( let ( ( var int ) ) ) 
( ( ) ) ( * ( sin ( := var ( - "I am a robot" ( - ( := var ( - 24 var ) ) ) ) ) ) ( and "I am a robot" ( = ( := var ( := var var ) ) float ) ) ) ( let ( ( var int ) ) ) 
( ) 
( ) 
( ) 
( ( ( ( ) ( ) "I am a robot" ( ( ) ) ) ) ) 
( ( ( ( ) ( ) "I am a robot" ( ( ) ) ) ) ) 
( ( ( ( ) ( ) "I am a robot" ( ( ) ) ) ) ) 
( or var ( := var ( != var "I am a robot" ) ) ) ( ( ) ( ( while ( sin ( - ( not true ) ) ) ( := var ( := var ( - ( := var ( - ( tan "I am a robot" ) ) ) ( / ( % var ( cos ( := var float ) ) ) var ) ) ) ) ) ( ( stdout ( + var ( % var ( tan ( > ( - ( * ( tan "I am a robot" ) ( < ( - ( := var ( or ( := var ( <= ( or ( := var "I am a robot" ) ( tan var ) ) ( - ( < ( and ( sin ( := var ( < ( - var ) var ) ) ) var ) ( sin ( tan "I am a robot" ) ) ) var ) ) ) ( := var ( := var ( + ( := var true ) ( <= ( not float ) var ) ) ) ) ) ) ) var ) ) ) var ) ) ) ) ) ) ) ) 
( or var ( := var ( != var "I am a robot" ) ) ) ( ( ) ( ( while ( sin ( - ( not true ) ) ) ( := var ( := var ( - ( := var ( - ( tan "I am a robot" ) ) ) ( / ( % var ( cos ( := var float ) ) ) var ) ) ) ) ) ( ( stdout ( + var ( % var ( tan ( > ( - ( * ( tan "I am a robot" ) ( < ( - ( := var ( or ( := var ( <= ( or ( := var "I am a robot" ) ( tan var ) ) ( - ( < ( and ( sin ( := var ( < ( - var ) var ) ) ) var ) ( sin ( tan "I am a robot" ) ) ) var ) ) ) ( := var ( := var ( + ( := var true ) ( <= ( not float ) var ) ) ) ) ) ) ) var ) ) ) var ) ) ) ) ) ) ) ) 
( ) 
( ) 
( while ( let ( ( var int ) ) ) ( if ( tan ( tan var ) ) ( while ( if "I am a robot" float ( % ( not ( <= ( <= float var ) ( := var ( and ( - ( tan ( := var ( cos ( - var ) ) ) ) ( % var ( := var true ) ) ) var ) ) ) ) var ) ) ( + float ( = ( - ( := var ( := var ( <= var ( cos var ) ) ) ) ) var ) ) ( tan ( + ( - ( % ( := var float ) var ) ) var ) ) ) ) ( stdout ( := var var ) ) ) ( cos ( := var ( cos ( := var ( and 24 ( * ( >= ( not ( := var ( not var ) ) ) 24 ) 24 ) ) ) ) ) ) ( ( ( ) ) ) 
( if ( stdout true ) ( sin true ) ) 
( ( ) ( := var ( >= true var ) ) ) ( ( cos 24 ) ) 
( while "I am a robot" ( stdout var ) ( or ( sin ( cos "I am a robot" ) ) var ) ) 
( ( ) ) 
( ) 
24 ( ) 
( float ) 
( float ) 
( ( if var ( := var ( != float ( cos ( sin ( := var ( := var var ) ) ) ) ) ) ( stdout ( := var ( < var "I am a robot" ) ) ) ) ) ( ( sin ( not 24 ) ) ) ( ( ( != ( - ( > ( != var var ) float ) ) ( - "I am a robot" ( := var var ) ) ) ) ( if ( > ( := var ( := var ( := var ( - ( cos ( tan true ) ) ) ) ) ) ( - float ) ) float ) ( ) ( ( ( ( ) ) ) ) ( var ( <= true var ) ) ( := var ( := var true ) ) ( while var ( let ( ( var int ) ) ) ) ( ( := var ( tan ( < ( = ( - ( not float ) ) float ) 24 ) ) ) ) ) 
( let ( ( var int ) ( var int ) ) ) 
( ( ( ( ) ) ) ) 
( ( ( ( ) ) ) ) 
( ^ var ( and ( := var ( tan ( := var ( > 24 "I am a robot" ) ) ) ) ( and "I am a robot" ( <= ( * ( := var ( := var ( sin ( := var ( := var ( >= ( ^ ( >= var ( := var var ) ) "I am a robot" ) var ) ) ) ) ) ) "I am a robot" ) ( := var ( sin ( / var ( not ( cos ( cos ( := var 24 ) ) ) ) ) ) ) ) ) ) ) ( - 24 var ) 
( stdout ( := var ( not ( > var var ) ) ) ) 
( stdout ( := var ( not ( > var var ) ) ) ) 
( ) 
( ) 
( ( ( ) ( + true ( cos ( := var ( := var "I am a robot" ) ) ) ) ( ) ( ) ( ( ( ) ) var ( ) ) ( ) ) ) ( ) 
( if ( if var ( = 24 var ) ( if ( let ( ( var int ) ( var int ) ) ) ( let ( ( var int ) ) ) ) ) ( stdout ( := var ( := var ( not ( := var ( >= ( := var var ) 24 ) ) ) ) ) ) var ) 
( if ( if var ( = 24 var ) ( if ( let ( ( var int ) ( var int ) ) ) ( let ( ( var int ) ) ) ) ) ( stdout ( := var ( := var ( not ( := var ( >= ( := var var ) 24 ) ) ) ) ) ) var ) 
( ) 
( ) 
( tan ( tan ( = float ( := var var ) ) ) ) ( ) 
( while ( := var true ) ( < float var ) ) 
( while ( := var true ) ( < float var ) ) 
( ) 
( if "I am a robot" ( if var float ) ) 
( ( ( stdout ( - ( <= var ( % float ( sin ( - ( <= var ( + var var ) ) var ) ) ) ) ) ) ) ) 
( tan var ) ( ( ( ) ) ( ) ) 
( while ( stdout var ) ( if var var ) ) 
( while ( stdout var ) ( if var var ) ) 
( while ( stdout var ) ( if var var ) ) 
( ) 
( ) 
( ) 
( ( if ( stdout var ) var ) ) ( ( ) ) ( sin var ) "I am a robot" 
( let ( ( var int ) ) ) 
( let ( ( var int ) ) ) 
( let ( ( var int ) ) ) 
( ) 
( ) 
( ) 
true ( while ( + ( := var ( := var var ) ) ( tan ( := var ( - float ( not ( - ( % true var ) ) ) ) ) ) ) ( let ( ( var int ) ( var int ) ) ) ) 
true ( while ( + ( := var ( := var var ) ) ( tan ( := var ( - float ( not ( - ( % true var ) ) ) ) ) ) ) ( let ( ( var int ) ( var int ) ) ) ) 
true ( while ( + ( := var ( := var var ) ) ( tan ( := var ( - float ( not ( - ( % true var ) ) ) ) ) ) ) ( let ( ( var int ) ( var int ) ) ) ) 
( stdout ( cos var ) ) 
( stdout ( cos var ) ) 
( stdout ( cos var ) ) 
( ) 
( ) 
( ) 
( ( ) ) ( stdout ( := var var ) ) ( ( ( := var ( cos 24 ) ) ) ) ( ( ( ) ( ( let ( ( var int ) ) ) ) ( * ( and ( := var ( ^ ( - ( ^ "I am a robot" ( cos ( sin "I am a robot" ) ) ) float ) ( := var ( sin var ) ) ) ) ( := var ( % float ( := var true ) ) ) ) ( := var float ) ) ) ) 
( ( ) ) ( stdout ( := var var ) ) ( ( ( := var ( cos 24 ) ) ) ) ( ( ( ) ( ( let ( ( var int ) ) ) ) ( * ( and ( := var ( ^ ( - ( ^ "I am a robot" ( cos ( sin "I am a robot" ) ) ) float ) ( := var ( sin var ) ) ) ) ( := var ( % float ( := var true ) ) ) ) ( := var float ) ) ) ) 